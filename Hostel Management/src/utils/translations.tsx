export type Language = 'en' | 'ta' | 'si';

export interface Translations {
  // Common
  settings: string;
  dashboard: string;
  welcome: string;
  logout: string;
  loading: string;
  cancel: string;
  save: string;
  accept: string;
  approve: string;
  room: string;
  student: string;
  students: string;
  name: string;
  signIn: string;
  
  // Settings
  appearance: string;
  darkMode: string;
  language: string;
  languageDescription: string;
  darkModeDescription: string;
  colorBlindMode: string;
  colorBlindModeDescription: string;
  resetPassword: string;
  currentPassword: string;
  newPassword: string;
  confirmPassword: string;
  updatePassword: string;
  updating: string;
  
  // Security Dashboard
  securityDashboard: string;
  securityMenu: string;
  keyAvailable: string;
  keyWithStudents: string;
  greenKeyWithStudents: string;
  redKeyAvailable: string;
  accessControlPanel: string;
  keyStatus: string;
  currentStatus: string;
  availableWithSecurity: string;
  withStudents: string;
  roomOccupants: string;
  securityProtocol: string;
  securityProtocolDescription: string;
  grantAccess: string;
  waitingForStudentResponse: string;
  waitingDescription: string;
  monitoringSubmission: string;
  cancelAndClose: string;
  
  // Warden Dashboard
  wardenDashboard: string;
  wardenMenu: string;
  wardenAdministrativePanel: string;
  nightPassPending: string;
  occupancy: string;
  nightPassRequest: string;
  pendingApproval: string;
  date: string;
  dispatchReturnTime: string;
  reason: string;
  approveNightPass: string;
  reviewLater: string;
  allClear: string;
  noPendingRequests: string;
  orangeAlert: string;
  nightPassRequestText: string;
  
  // Student Management
  studentManagement: string;
  allStudents: string;
  searchStudents: string;
  registrationNumber: string;
  roomNumber: string;
  status: string;
  action: string;
  active: string;
  inactive: string;
  activate: string;
  
  // Security Management
  securityManagement: string;
  hostelSecurities: string;
  addSecurity: string;
  addNewSecurityGuard: string;
  createSecurityAccount: string;
  personalInformation: string;
  fullName: string;
  phoneNumber: string;
  accountCredentials: string;
  username: string;
  password: string;
  securityGuidelines: string;
  securityGuidelinesDescription: string;
  addSecurityGuard: string;
  
  // Languages
  english: string;
  tamil: string;
  sinhala: string;
}

export const translations: Record<Language, Translations> = {
  en: {
    // Common
    settings: "Settings",
    dashboard: "Dashboard",
    welcome: "Welcome",
    logout: "Logout",
    loading: "Loading",
    cancel: "Cancel",
    save: "Save",
    accept: "Accept",
    approve: "Approve",
    room: "Room",
    student: "Student",
    students: "Students",
    name: "Name",
    signIn: "Sign in",
    
    // Settings
    appearance: "Appearance",
    darkMode: "Dark Mode",
    language: "Language",
    languageDescription: "Choose your preferred language",
    darkModeDescription: "Toggle between light and dark theme",
    colorBlindMode: "Color Blind Accessibility",
    colorBlindModeDescription: "Use color blind friendly colors (replaces red/green with blue/orange)",
    resetPassword: "Reset Password",
    currentPassword: "Current Password",
    newPassword: "New Password",
    confirmPassword: "Confirm New Password",
    updatePassword: "Update Password",
    updating: "Updating...",
    
    // Security Dashboard
    securityDashboard: "Security Dashboard",
    securityMenu: "Security Menu",
    keyAvailable: "Key Available",
    keyWithStudents: "Key with Students",
    greenKeyWithStudents: "ЁЯЯв Green: Key with students",
    redKeyAvailable: "ЁЯФ┤ Red: Key available with security",
    accessControlPanel: "Access Control Panel",
    keyStatus: "Key Status",
    currentStatus: "Current Status:",
    availableWithSecurity: "Available with Security",
    withStudents: "With Students",
    roomOccupants: "Room Occupants",
    securityProtocol: "Security Protocol",
    securityProtocolDescription: "Granting access will allow students to submit key transaction forms. Monitor for completion.",
    grantAccess: "Grant Access to Students",
    waitingForStudentResponse: "Waiting for Student Response",
    waitingDescription: "Students have been notified. They can now submit their key transaction forms.",
    monitoringSubmission: "Monitoring for form submission...",
    cancelAndClose: "Cancel & Close",
    
    // Warden Dashboard
    wardenDashboard: "Warden Dashboard",
    wardenMenu: "Warden Menu",
    wardenAdministrativePanel: "Warden Administrative Panel",
    nightPassPending: "Night Pass Pending",
    occupancy: "Occupancy",
    nightPassRequest: "Night Pass Request",
    pendingApproval: "Pending your approval",
    date: "Date",
    dispatchReturnTime: "Dispatch - Return Time",
    reason: "Reason",
    approveNightPass: "Approve Night Pass",
    reviewLater: "Review Later",
    allClear: "All Clear",
    noPendingRequests: "No pending night pass requests for this room",
    orangeAlert: "тЪая╕П Orange !: Night pass request",
    nightPassRequestText: "Night Pass Request",
    
    // Student Management
    studentManagement: "Student Management",
    allStudents: "All Students",
    searchStudents: "Search students...",
    registrationNumber: "Registration Number",
    roomNumber: "Room Number",
    status: "Status",
    action: "Action",
    active: "Active",
    inactive: "Inactive",
    activate: "Activate",
    
    // Security Management
    securityManagement: "Security Management",
    hostelSecurities: "Hostel Securities",
    addSecurity: "Add Security",
    addNewSecurityGuard: "Add Security Guard",
    createSecurityAccount: "Create new security personnel account",
    personalInformation: "Personal Information",
    fullName: "Full Name",
    phoneNumber: "Phone Number",
    accountCredentials: "Account Credentials",
    username: "Username",
    password: "Password",
    securityGuidelines: "Security Guidelines",
    securityGuidelinesDescription: "New security guard will have access to room monitoring and key management functions.",
    addSecurityGuard: "Add Security",
    
    // Languages
    english: "English",
    tamil: "Tamil",
    sinhala: "Sinhala"
  },
  
  ta: {
    // Common
    settings: "роЕроорпИрокрпНрокрпБроХро│рпН",
    dashboard: "роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБ",
    welcome: "ро╡рогроХрпНроХроорпН",
    logout: "ро╡рпЖро│ро┐ропрпЗро▒рпБ",
    loading: "роПро▒рпНро▒рпБроХро┐ро▒родрпБ",
    cancel: "ро░родрпНродрпБ роЪрпЖропрпН",
    save: "роЪрпЗрооро┐",
    accept: "роПро▒рпНро▒рпБроХрпНроХрпКро│рпН",
    approve: "роЕройрпБроородро┐",
    room: "роЕро▒рпИ",
    student: "рооро╛рогро╡ро░рпН",
    students: "рооро╛рогро╡ро░рпНроХро│рпН",
    name: "рокрпЖропро░рпН",
    signIn: "роЙро│рпНроирпБро┤рпИроп",
    
    // Settings
    appearance: "родрпЛро▒рпНро▒роорпН",
    darkMode: "роЗро░рпБрогрпНроЯ роорпБро▒рпИ",
    language: "роорпКро┤ро┐",
    languageDescription: "роЙроЩрпНроХро│рпН ро╡ро┐ро░рпБрокрпНрокрооро╛рой роорпКро┤ро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН",
    darkModeDescription: "ро╡рпЖро│ро┐роЪрпНроЪроорпН рооро▒рпНро▒рпБроорпН роЗро░рпБрогрпНроЯ родрпАроорпН роЗроЯрпИропрпЗ рооро╛ро▒рпНро▒ро╡рпБроорпН",
    colorBlindMode: "ро╡рогрпНрог роХрпБро░рпБроЯрпНроЯрпБродрпНродройрпНроорпИ роЕрогрпБроХро▓рпН",
    colorBlindModeDescription: "ро╡рогрпНрог роХрпБро░рпБроЯрпНроЯрпБродрпНродройрпНроорпИроХрпНроХрпБ роПро▒рпНро▒ ро╡рогрпНрогроЩрпНроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН (роЪро┐ро╡рокрпНрокрпБ/рокроЪрпНроЪрпИроХрпНроХрпБ рокродро┐ро▓ро╛роХ роирпАро▓роорпН/роЖро░роЮрпНроЪрпБ)",
    resetPassword: "роХроЯро╡рпБроЪрпНроЪрпКро▓рпН роорпАроЯрпНроЯроорпИ",
    currentPassword: "родро▒рпНрокрпЛродрпИроп роХроЯро╡рпБроЪрпНроЪрпКро▓рпН",
    newPassword: "рокрпБродро┐роп роХроЯро╡рпБроЪрпНроЪрпКро▓рпН",
    confirmPassword: "рокрпБродро┐роп роХроЯро╡рпБроЪрпНроЪрпКро▓рпНро▓рпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро╡рпБроорпН",
    updatePassword: "роХроЯро╡рпБроЪрпНроЪрпКро▓рпНро▓рпИ рокрпБродрпБрокрпНрокро┐роХрпНроХро╡рпБроорпН",
    updating: "рокрпБродрпБрокрпНрокро┐роХрпНроХро┐ро▒родрпБ...",
    
    // Security Dashboard
    securityDashboard: "рокро╛родрпБроХро╛рокрпНрокрпБ роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБ",
    securityMenu: "рокро╛родрпБроХро╛рокрпНрокрпБ роорпЖройрпБ",
    keyAvailable: "роЪро╛ро╡ро┐ роХро┐роЯрпИроХрпНроХро┐ро▒родрпБ",
    keyWithStudents: "рооро╛рогро╡ро░рпНроХро│ро┐роЯроорпН роЪро╛ро╡ро┐",
    greenKeyWithStudents: "ЁЯЯв рокроЪрпНроЪрпИ: рооро╛рогро╡ро░рпНроХро│ро┐роЯроорпН роЪро╛ро╡ро┐",
    redKeyAvailable: "ЁЯФ┤ роЪро┐ро╡рокрпНрокрпБ: рокро╛родрпБроХро╛рокрпНрокро┐ро▓рпН роЪро╛ро╡ро┐ роХро┐роЯрпИроХрпНроХро┐ро▒родрпБ",
    accessControlPanel: "роЕрогрпБроХро▓рпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпНроЯрпБ рокро▓роХроорпН",
    keyStatus: "роЪро╛ро╡ро┐ роиро┐ро▓рпИ",
    currentStatus: "родро▒рпНрокрпЛродрпИроп роиро┐ро▓рпИ:",
    availableWithSecurity: "рокро╛родрпБроХро╛рокрпНрокро┐ро▓рпН роХро┐роЯрпИроХрпНроХро┐ро▒родрпБ",
    withStudents: "рооро╛рогро╡ро░рпНроХро│рпБроЯройрпН",
    roomOccupants: "роЕро▒рпИ роХрпБроЯро┐ропро┐ро░рпБрокрпНрокро╛ро│ро░рпНроХро│рпН",
    securityProtocol: "рокро╛родрпБроХро╛рокрпНрокрпБ роирпЖро▒ро┐роорпБро▒рпИ",
    securityProtocolDescription: "роЕрогрпБроХро▓рпИ ро╡ро┤роЩрпНроХрпБро╡родрпБ рооро╛рогро╡ро░рпНроХро│рпН роЪро╛ро╡ро┐ рокро░ро┐ро╡ро░рпНродрпНродройрпИ рокроЯро┐ро╡роЩрпНроХро│рпИ роЪрооро░рпНрокрпНрокро┐роХрпНроХ роЕройрпБроородро┐роХрпНроХрпБроорпН. роорпБроЯро┐ро╡рпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН.",
    grantAccess: "рооро╛рогро╡ро░рпНроХро│рпБроХрпНроХрпБ роЕрогрпБроХро▓рпН ро╡ро┤роЩрпНроХро╡рпБроорпН",
    waitingForStudentResponse: "рооро╛рогро╡ро░рпН рокродро┐ро▓рпБроХрпНроХро╛роХ роХро╛родрпНродро┐ро░рпБроХрпНроХро┐ро▒родрпБ",
    waitingDescription: "рооро╛рогро╡ро░рпНроХро│рпБроХрпНроХрпБ роЕро▒ро┐ро╡ро┐роХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ. роЕро╡ро░рпНроХро│рпН роЗрокрпНрокрпЛродрпБ родроЩрпНроХро│рпН роЪро╛ро╡ро┐ рокро░ро┐ро╡ро░рпНродрпНродройрпИ рокроЯро┐ро╡роЩрпНроХро│рпИ роЪрооро░рпНрокрпНрокро┐роХрпНроХ роорпБроЯро┐ропрпБроорпН.",
    monitoringSubmission: "рокроЯро┐ро╡ роЪрооро░рпНрокрпНрокрогродрпНродрпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро┐ро▒родрпБ...",
    cancelAndClose: "ро░родрпНродрпБ роЪрпЖропрпНродрпБ роорпВроЯрпБ",
    
    // Warden Dashboard
    wardenDashboard: "ро╡ро╛ро░рпНроЯройрпН роЯро╛ро╖рпНрокрпЛро░рпНроЯрпБ",
    wardenMenu: "ро╡ро╛ро░рпНроЯройрпН роорпЖройрпБ",
    wardenAdministrativePanel: "ро╡ро╛ро░рпНроЯройрпН роиро┐ро░рпНро╡ро╛роХ рокро▓роХроорпН",
    nightPassPending: "роЗро░ро╡рпБ роЕройрпБроородро┐ роиро┐ро▓рпБро╡рпИропро┐ро▓рпН",
    occupancy: "роХрпБроЯро┐ропро┐ро░рпБрокрпНрокрпБ",
    nightPassRequest: "роЗро░ро╡рпБ роЕройрпБроородро┐ роХрпЛро░ро┐роХрпНроХрпИ",
    pendingApproval: "роЙроЩрпНроХро│рпН роЕройрпБроородро┐роХрпНроХро╛роХ роиро┐ро▓рпБро╡рпИропро┐ро▓рпН",
    date: "родрпЗродро┐",
    dispatchReturnTime: "рокрпБро▒рокрпНрокро╛роЯрпБ - родро┐ро░рпБроорпНрокрпБроорпН роирпЗро░роорпН",
    reason: "роХро╛ро░рогроорпН",
    approveNightPass: "роЗро░ро╡рпБ роЕройрпБроородро┐ропрпИ роЕройрпБроородро┐роХрпНроХро╡рпБроорпН",
    reviewLater: "рокро┐ройрпНройро░рпН роородро┐рокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпН",
    allClear: "роЕройрпИродрпНродрпБроорпН родрпЖро│ро┐ро╡рпБ",
    noPendingRequests: "роЗроирпНрод роЕро▒рпИроХрпНроХрпБ роиро┐ро▓рпБро╡рпИропро┐ро▓рпН роЙро│рпНро│ роЗро░ро╡рпБ роЕройрпБроородро┐ роХрпЛро░ро┐роХрпНроХрпИроХро│рпН роЗро▓рпНро▓рпИ",
    orangeAlert: "тЪая╕П роЖро░роЮрпНроЪрпБ !: роЗро░ро╡рпБ роЕройрпБроородро┐ роХрпЛро░ро┐роХрпНроХрпИ",
    nightPassRequestText: "роЗро░ро╡рпБ роЕройрпБроородро┐ роХрпЛро░ро┐роХрпНроХрпИ",
    
    // Student Management
    studentManagement: "рооро╛рогро╡ро░рпН роорпЗро▓ро╛рогрпНроорпИ",
    allStudents: "роЕройрпИродрпНродрпБ рооро╛рогро╡ро░рпНроХро│рпН",
    searchStudents: "рооро╛рогро╡ро░рпНроХро│рпИродрпН родрпЗроЯрпБ...",
    registrationNumber: "рокродро┐ро╡рпБ роОрогрпН",
    roomNumber: "роЕро▒рпИ роОрогрпН",
    status: "роиро┐ро▓рпИ",
    action: "роЪрпЖропро▓рпН",
    active: "роЪрпЖропро▓рпНрокроЯрпБроорпН",
    inactive: "роЪрпЖропро▓рпНрокроЯро╛род",
    activate: "роЪрпЖропро▓рпНрокроЯрпБродрпНродрпБ",
    
    // Security Management
    securityManagement: "рокро╛родрпБроХро╛рокрпНрокрпБ роорпЗро▓ро╛рогрпНроорпИ",
    hostelSecurities: "ро╡ро┐роЯрпБродро┐ рокро╛родрпБроХро╛рокрпНрокрпБ",
    addSecurity: "рокро╛родрпБроХро╛рокрпНрокрпБ роЪрпЗро░рпН",
    addNewSecurityGuard: "рокро╛родрпБроХро╛рокрпНрокрпБ роХро╛ро╡ро▓ро░рпН роЪрпЗро░рпН",
    createSecurityAccount: "рокрпБродро┐роп рокро╛родрпБроХро╛рокрпНрокрпБ рокрогро┐ропро╛ро│ро░рпН роХрогроХрпНроХрпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН",
    personalInformation: "родройро┐рокрпНрокроЯрпНроЯ родроХро╡ро▓рпН",
    fullName: "роорпБро┤рпБ рокрпЖропро░рпН",
    phoneNumber: "родрпКро▓рпИрокрпЗроЪро┐ роОрогрпН",
    accountCredentials: "роХрогроХрпНроХрпБ роЪро╛ройрпНро▒рпБроХро│рпН",
    username: "рокропройро░рпН рокрпЖропро░рпН",
    password: "роХроЯро╡рпБроЪрпНроЪрпКро▓рпН",
    securityGuidelines: "рокро╛родрпБроХро╛рокрпНрокрпБ ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпНроХро│рпН",
    securityGuidelinesDescription: "рокрпБродро┐роп рокро╛родрпБроХро╛рокрпНрокрпБ роХро╛ро╡ро▓ро░рпБроХрпНроХрпБ роЕро▒рпИ роХрогрпНроХро╛рогро┐рокрпНрокрпБ рооро▒рпНро▒рпБроорпН роЪро╛ро╡ро┐ роорпЗро▓ро╛рогрпНроорпИ роЪрпЖропро▓рпНрокро╛роЯрпБроХро│рпБроХрпНроХро╛рой роЕрогрпБроХро▓рпН роЗро░рпБроХрпНроХрпБроорпН.",
    addSecurityGuard: "рокро╛родрпБроХро╛рокрпНрокрпБ роЪрпЗро░рпН",
    
    // Languages
    english: "роЖроЩрпНроХро┐ро▓роорпН",
    tamil: "родрооро┐ро┤рпН",
    sinhala: "роЪро┐роЩрпНроХро│роорпН"
  },
  
  si: {
    // Common
    settings: "р╖Гр╖Рр╢Ър╖Гр╖Ур╢╕р╖К",
    dashboard: "р╢Лр╢┤р╢Ър╢╗р╢л р╢┤р╖Фр╖Ар╢╗р╖Фр╖А",
    welcome: "р╢Жр╢║р╖Фр╢╢р╖Эр╖Ар╢▒р╖К",
    logout: "р╢Йр╖Ар╢нр╖К р╖Ар╢▒р╖Кр╢▒",
    loading: "р╢┤р╖Цр╢╗р╢лр╢║ р╖Ар╖Щр╢╕р╖Тр╢▒р╖К",
    cancel: "р╢Ер╖Ар╢╜р╢Вр╢Ьр╖Ф р╢Ър╢╗р╢▒р╖Кр╢▒",
    save: "р╖Гр╖Фр╢╗р╢Ър╖Тр╢▒р╖Кр╢▒",
    accept: "р╢┤р╖Тр╖Ер╖Тр╢Ьр╢▒р╖Кр╢▒",
    approve: "р╢Ер╢▒р╖Фр╢╕р╢н р╢Ър╢╗р╢▒р╖Кр╢▒",
    room: "р╢Ър╖Пр╢╕р╢╗р╢║",
    student: "р╖Бр╖Тр╖Вр╖КтАНр╢║",
    students: "р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖К",
    name: "р╢▒р╢╕",
    signIn: "р╢Зр╢нр╖Фр╖Ер╖Ф р╖Ар╢▒р╖Кр╢▒",
    
    // Settings
    appearance: "р╢┤р╖Щр╢▒р╖Фр╢╕",
    darkMode: "р╢Ер╢│р╖Фр╢╗р╖Ф р╢Ър╖КтАНр╢╗р╢╕р╢║",
    language: "р╢╖р╖Пр╖Вр╖Пр╖А",
    languageDescription: "р╢Фр╢╢р╢Ьр╖Ъ р╢Ър╖Рр╢╕р╢нр╖Т р╢╖р╖Пр╖Вр╖Пр╖А р╢нр╖Эр╢╗р╢▒р╖Кр╢▒",
    darkModeDescription: "р╢Жр╢╜р╖Эр╢Ъ р╖Др╖П р╢Ер╢│р╖Фр╢╗р╖Ф р╢нр╖Ър╢╕р╖П р╢Ер╢нр╢╗ р╢╕р╖Пр╢╗р╖Ф р╖Ар╢▒р╖Кр╢▒",
    colorBlindMode: "р╖Ар╢╗р╖Кр╢л р╢Ер╢▒р╖Кр╢░р╢нр╖П р╢┤р╖КтАНр╢╗р╖Ар╖Ър╖Бр╢║",
    colorBlindModeDescription: "р╖Ар╢╗р╖Кр╢л р╢Ер╢▒р╖Кр╢░р╢нр╖Пр╖Ар╢з р╖Др╖Тр╢нр╢Ър╢╗ р╖Ар╢╗р╖Кр╢л р╢╖р╖Пр╖Ар╖Тр╢нр╖П р╢Ър╢╗р╢▒р╖Кр╢▒ (р╢╗р╢нр╖Ф/р╢Ър╖Ьр╖Е р╖Ар╖Щр╢▒р╖Фр╖Ар╢з р╢▒р╖Тр╢╜р╖К/р╢нр╖Рр╢╣р╖Тр╢╜р╖Т)",
    resetPassword: "р╢╕р╖Фр╢╗ р╢┤р╢пр╢║ р╢║р╖Ер╖Т р╖Гр╢Ър╖Гр╢▒р╖Кр╢▒",
    currentPassword: "р╖Ар╢╗р╖Кр╢нр╢╕р╖Пр╢▒ р╢╕р╖Фр╢╗ р╢┤р╢пр╢║",
    newPassword: "р╢▒р╖А р╢╕р╖Фр╢╗ р╢┤р╢пр╢║",
    confirmPassword: "р╢▒р╖А р╢╕р╖Фр╢╗ р╢┤р╢пр╢║ р╢нр╖Др╖Ар╖Фр╢╗р╖Ф р╢Ър╢╗р╢▒р╖Кр╢▒",
    updatePassword: "р╢╕р╖Фр╢╗ р╢┤р╢пр╢║ р╢║р╖Пр╖Ар╢нр╖Кр╢Ър╖Пр╢╜р╖Ур╢▒ р╢Ър╢╗р╢▒р╖Кр╢▒",
    updating: "р╢║р╖Пр╖Ар╢нр╖Кр╢Ър╖Пр╢╜р╖Ур╢▒ р╢Ър╢╗р╢╕р╖Тр╢▒р╖К...",
    
    // Security Dashboard
    securityDashboard: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢Лр╢┤р╢Ър╢╗р╢л р╢┤р╖Фр╖Ар╢╗р╖Фр╖А",
    securityMenu: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢╕р╖Щр╢▒р╖Фр╖А",
    keyAvailable: "р╢║р╢нр╖Фр╢╗ р╢╜р╢╢р╖П р╢Ьр╢н р╖Др╖Рр╢Ъ",
    keyWithStudents: "р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖К р╖Гр╢╕р╢Я р╢║р╢нр╖Фр╢╗",
    greenKeyWithStudents: "ЁЯЯв р╢Ър╖Ьр╖Е: р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖К р╖Гр╢╕р╢Я р╢║р╢нр╖Фр╢╗",
    redKeyAvailable: "ЁЯФ┤ р╢╗р╢нр╖Ф: р╢Жр╢╗р╢Ър╖Кр╖Вр╖Пр╖А р╖Гр╢╕р╢Я р╢║р╢нр╖Фр╢╗ р╢╜р╢╢р╖П р╢Ьр╢н р╖Др╖Рр╢Ъ",
    accessControlPanel: "р╢┤р╖КтАНр╢╗р╖Ар╖Ър╖Б р╢┤р╖Пр╢╜р╢▒ р╢┤р╖Фр╖Ар╢╗р╖Фр╖А",
    keyStatus: "р╢║р╢нр╖Фр╢╗ р╢нр╢нр╖Кр╢нр╖Кр╖Ар╢║",
    currentStatus: "р╖Ар╢╗р╖Кр╢нр╢╕р╖Пр╢▒ р╢нр╢нр╖Кр╢нр╖Кр╖Ар╢║:",
    availableWithSecurity: "р╢Жр╢╗р╢Ър╖Кр╖Вр╖Пр╖А р╖Гр╢╕р╢Я р╢╜р╢╢р╖П р╢Ьр╢н р╖Др╖Рр╢Ъ",
    withStudents: "р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖К р╖Гр╢╕р╢Я",
    roomOccupants: "р╢Ър╖Пр╢╕р╢╗ р╢▒р╖Тр╖Ар╖Рр╖Гр╖Тр╢║р╢▒р╖К",
    securityProtocol: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢┤р╖КтАНр╢╗р╖Ьр╢зр╖Эр╢Ър╖Эр╢╜р╢║",
    securityProtocolDescription: "р╢┤р╖КтАНр╢╗р╖Ар╖Ър╖Бр╢║ р╢╜р╢╢р╖П р╢пр╖Ур╢╕ р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖Кр╢з р╢║р╢нр╖Фр╢╗ р╢Ьр╢▒р╖Фр╢пр╖Щр╢▒р╖Ф р╢Жр╢Ър╖Шр╢нр╖Т р╢Йр╢пр╖Тр╢╗р╖Тр╢┤р╢нр╖К р╢Ър╖Тр╢╗р╖Ур╢╕р╢з р╢Йр╢й р╖Гр╢╜р╖Гр╢║р╖Т. р╖Гр╢╕р╖Кр╢┤р╖Цр╢╗р╖Кр╢л р╢Ър╖Тр╢╗р╖Ур╢╕ р╢▒р╖Тр╢╗р╖Ур╢Ър╖Кр╖Вр╢лр╢║ р╢Ър╢╗р╢▒р╖Кр╢▒.",
    grantAccess: "р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖Кр╢з р╢┤р╖КтАНр╢╗р╖Ар╖Ър╖Бр╢║ р╢╜р╢╢р╖П р╢пр╖Щр╢▒р╖Кр╢▒",
    waitingForStudentResponse: "р╖Бр╖Тр╖Вр╖КтАНр╢║ р╢┤р╖КтАНр╢╗р╢нр╖Тр╢ар╖Пр╢╗р╢║ р╖Гр╢│р╖Др╖П р╢╢р╢╜р╖П р╖Гр╖Тр╢зр╖Тр╢╕р╖Тр╢▒р╖К",
    waitingDescription: "р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖Кр╢з р╢пр╖Рр╢▒р╖Фр╢╕р╖К р╢пр╖У р╢Зр╢н. р╢Фр╖Ар╖Фр╢▒р╖Кр╢з р╢пр╖Рр╢▒р╖К р╢Фр╖Ар╖Фр╢▒р╖Кр╢Ьр╖Ъ р╢║р╢нр╖Фр╢╗ р╢Ьр╢▒р╖Фр╢пр╖Щр╢▒р╖Ф р╢Жр╢Ър╖Шр╢нр╖Т р╢Йр╢пр╖Тр╢╗р╖Тр╢┤р╢нр╖К р╢Ър╖Е р╖Др╖Рр╢Ъ.",
    monitoringSubmission: "р╢Жр╢Ър╖Шр╢нр╖Т р╢Йр╢пр╖Тр╢╗р╖Тр╢┤р╢нр╖К р╢Ър╖Тр╢╗р╖Ур╢╕ р╢▒р╖Тр╢╗р╖Ур╢Ър╖Кр╖Вр╢лр╢║ р╢Ър╢╗р╢╕р╖Тр╢▒р╖К...",
    cancelAndClose: "р╢Ер╖Ар╢╜р╢Вр╢Ьр╖Ф р╢Ър╢╗ р╖Ар╖Гр╢▒р╖Кр╢▒",
    
    // Warden Dashboard
    wardenDashboard: "р╖Ар╖Эр╢╗р╖Кр╢йр╢▒р╖К р╢Лр╢┤р╢Ър╢╗р╢л р╢┤р╖Фр╖Ар╢╗р╖Фр╖А",
    wardenMenu: "р╖Ар╖Эр╢╗р╖Кр╢йр╢▒р╖К р╢╕р╖Щр╢▒р╖Фр╖А",
    wardenAdministrativePanel: "р╖Ар╖Эр╢╗р╖Кр╢йр╢▒р╖К р╢┤р╢╗р╖Тр╢┤р╖Пр╢╜р╢▒ р╢┤р╖Фр╖Ар╢╗р╖Фр╖А",
    nightPassPending: "р╢╗р╖Пр╢нр╖КтАНр╢╗р╖У р╢Ер╖Ар╖Гр╢╗ р╢▒р╖Тр╢║р╢╕",
    occupancy: "р╖Ар╖Пр╖Гр╢║",
    nightPassRequest: "р╢╗р╖Пр╢нр╖КтАНр╢╗р╖У р╢Ер╖Ар╖Гр╢╗ р╢Йр╢╜р╖Кр╢╜р╖Ур╢╕",
    pendingApproval: "р╢Фр╢╢р╢Ьр╖Ъ р╢Ер╢▒р╖Фр╢╕р╢нр╖Тр╢║ р╖Гр╢│р╖Др╖П р╢▒р╖Тр╢║р╢╕",
    date: "р╢пр╖Тр╢▒р╢║",
    dispatchReturnTime: "р╢║р╖Пр╢╕ - р╢Ср╢▒ р╢Ър╖Пр╢╜р╢║",
    reason: "р╖Др╖Ър╢нр╖Фр╖А",
    approveNightPass: "р╢╗р╖Пр╢нр╖КтАНр╢╗р╖У р╢Ер╖Ар╖Гр╢╗ р╢Ер╢▒р╖Фр╢╕р╢н р╢Ър╢╗р╢▒р╖Кр╢▒",
    reviewLater: "р╢┤р╖Гр╖Фр╖А р╖Гр╢╕р╖Пр╢╜р╖Эр╢ар╢▒р╢║ р╢Ър╢╗р╢▒р╖Кр╢▒",
    allClear: "р╖Гр╖Тр╢║р╢╜р╖Кр╢╜ р╢┤р╖Рр╖Др╖Рр╢пр╖Тр╢╜р╖Т",
    noPendingRequests: "р╢╕р╖Щр╢╕ р╢Ър╖Пр╢╕р╢╗р╢║ р╖Гр╢│р╖Др╖П р╢╗р╖Пр╢нр╖КтАНр╢╗р╖У р╢Ер╖Ар╖Гр╢╗ р╢Йр╢╜р╖Кр╢╜р╖Ур╢╕р╖К р╢▒р╖Тр╢║р╢╕ р╢▒р╖Рр╢н",
    orangeAlert: "тЪая╕П р╢нр╖Рр╢╣р╖Тр╢╜р╖Т !: р╢╗р╖Пр╢нр╖КтАНр╢╗р╖У р╢Ер╖Ар╖Гр╢╗ р╢Йр╢╜р╖Кр╢╜р╖Ур╢╕",
    nightPassRequestText: "р╢╗р╖Пр╢нр╖КтАНр╢╗р╖У р╢Ер╖Ар╖Гр╢╗ р╢Йр╢╜р╖Кр╢╜р╖Ур╢╕",
    
    // Student Management
    studentManagement: "р╖Бр╖Тр╖Вр╖КтАНр╢║ р╢Ър╖Ер╢╕р╢▒р╖Пр╢Ър╢╗р╢лр╢║",
    allStudents: "р╖Гр╖Тр╢║р╢╜р╖Фр╢╕ р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖К",
    searchStudents: "р╖Бр╖Тр╖Вр╖КтАНр╢║р╢║р╢▒р╖К р╖Гр╖Ьр╢║р╢▒р╖Кр╢▒...",
    registrationNumber: "р╢╜р╖Тр╢║р╖Пр╢┤р╢пр╖Тр╢Вр╢ар╖Т р╢Ер╢Вр╢Ър╢║",
    roomNumber: "р╢Ър╖Пр╢╕р╢╗ р╢Ер╢Вр╢Ър╢║",
    status: "р╢нр╢нр╖Кр╢нр╖Кр╖Ар╢║",
    action: "р╢Ър╖КтАНр╢╗р╖Тр╢║р╖Пр╖А",
    active: "р╢Ър╖КтАНр╢╗р╖Тр╢║р╖Пр╢Ър╖Пр╢╗р╖У",
    inactive: "р╢Ер╢Ър╖КтАНр╢╗р╖Тр╢║",
    activate: "р╖Гр╢Ър╖КтАНр╢╗р╖Тр╢║ р╢Ър╢╗р╢▒р╖Кр╢▒",
    
    // Security Management
    securityManagement: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢Ър╖Ер╢╕р╢▒р╖Пр╢Ър╢╗р╢лр╢║",
    hostelSecurities: "р╢▒р╖Ър╖Ар╖Пр╖Гр╖Тр╢Ъ р╢Жр╢╗р╢Ър╖Кр╖Вр╖Пр╖А",
    addSecurity: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ър╢║р╖П р╢Ср╢Ър╢нр╖Ф р╢Ър╢╗р╢▒р╖Кр╢▒",
    addNewSecurityGuard: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ър╢║р╖П р╢Ср╢Ър╢нр╖Ф р╢Ър╢╗р╢▒р╖Кр╢▒",
    createSecurityAccount: "р╢▒р╖А р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢┤р╖Фр╢пр╖Кр╢Ьр╢╜ р╢Ьр╖Тр╢лр╖Фр╢╕р╢Ър╖К р╖Гр╖Пр╢пр╢▒р╖Кр╢▒",
    personalInformation: "р╢┤р╖Фр╢пр╖Кр╢Ьр╢╜р╖Тр╢Ъ р╢нр╖Ьр╢╗р╢нр╖Фр╢╗р╖Ф",
    fullName: "р╖Гр╢╕р╖Кр╢┤р╖Цр╢╗р╖Кр╢л р╢▒р╢╕",
    phoneNumber: "р╢пр╖Фр╢╗р╢Ър╢ор╢▒ р╢Ер╢Вр╢Ър╢║",
    accountCredentials: "р╢Ьр╖Тр╢лр╖Фр╢╕р╖К р╖Гр╖Др╢нр╖Тр╢Ъ",
    username: "р╢┤р╢╗р╖Тр╖Бр╖Ур╢╜р╢Ъ р╢▒р╖Пр╢╕р╢║",
    password: "р╢╕р╖Фр╢╗ р╢┤р╢пр╢║",
    securityGuidelines: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢╕р╖Пр╢╗р╖Кр╢Ьр╖Эр╢┤р╢пр╖Ър╖Б",
    securityGuidelinesDescription: "р╢▒р╖А р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ъ р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ър╢║р╖Пр╢з р╢Ър╖Пр╢╕р╢╗ р╢▒р╖Тр╢╗р╖Ур╢Ър╖Кр╖Вр╢л р╖Гр╖Д р╢║р╢нр╖Фр╢╗ р╢Ър╖Ер╢╕р╢▒р╖Пр╢Ър╢╗р╢л р╢Ър╖Пр╢╗р╖Кр╢║р╢║р╢▒р╖К р╖Гр╢│р╖Др╖П р╢┤р╖КтАНр╢╗р╖Ар╖Ър╖Бр╢║ р╢╜р╖Рр╢╢р╖Ъ.",
    addSecurityGuard: "р╢Жр╢╗р╢Ър╖Кр╖Вр╢Ър╢║р╖П р╢Ср╢Ър╢нр╖Ф р╢Ър╢╗р╢▒р╖Кр╢▒",
    
    // Languages
    english: "р╢Йр╢Вр╢Ьр╖КтАНр╢╗р╖Ур╖Гр╖Т",
    tamil: "р╢пр╖Щр╢╕р╖Е",
    sinhala: "р╖Гр╖Тр╢Вр╖Др╢╜"
  }
};

export const getTranslation = (language: Language, key: keyof Translations): string => {
  try {
    if (!language || !translations[language]) {
      return translations.en[key] || key;
    }
    return translations[language][key] || translations.en[key] || key;
  } catch (error) {
    console.warn(`Translation error for key '${key}' and language '${language}':`, error);
    return key;
  }
};